# Installation

See http://caffe.berkeleyvision.org/installation.html for the latest
installation instructions.

Check the users group in case you need help:
https://groups.google.com/forum/#!forum/caffe-users

-----------------------------------------------------------------------------
To check CudNN version 
$ cat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2

____________________________________________________________________________

Discover which ubuntu driver number you need for system.:

$ sudo ubuntu-drivers devices

____________________________________________________________________________

CUDA and CuDNN recomendations for cafee 

It is said that caffe i scomatible to CUDA 9.1 and cuDNN 7.1

____________________________________________________________________________

Download and install OpenCV 
to download 
wget https://github.com/opencv/opencv/archive/3.4.0.zip -O opencv-3.4.0.zip

to install 

https://www.pytorials.com/how-to-install-opencv340-on-ubuntu1604/

----------------------------------------------------------------------------------

Copy multiple files corresponding to files in a folder to another files.  e.g  compy all images from folder A to folder B which have same 
XML names in folder B

https://blog.csdn.net/fqlovetb/article/details/84334459

-----------------------------------------------------------------------------------

get jetson TX2 board unique information 

$ cat /proc/cmdline

which returns unique ID like this.

androidboot.serialno=0335115020673

-----------------------------------------------------------------------------------
convert coco dataset .json labels to xmls. 

https://github.com/CasiaFan/Dataset_to_VOC_converter
-----------------------------------------------------------------------------------

mobile net link github 
https://github.com/eric612/MobileNet-YOLO
-----------------------------------------------------------------------------

Caffe installation 

https://chunml.github.io/ChunML.github.io/project/Installing-Caffe-Ubuntu/

continue from make opencv
-----------------------------------------------------------------------------
check CudNN version 

https://stackoverflow.com/questions/31326015/how-to-verify-cudnn-installation

ubuntu and cuda details 

https://tech.amikelive.com/node-669/guide-installing-cuda-toolkit-9-1-on-ubuntu-16-04/
cuda details, remove old version , install new

https://tech.amikelive.com/node-859/installing-cuda-toolkit-9-2-on-ubuntu-16-04-fresh-install-install-by-removing-older-version-install-and-retain-old-version/

cuda + cudnn installation 

https://peshmerge.io/how-to-install-cuda-9-0-on-with-cudnn-7-1-4-on-ubuntu-18-04/
-----------------------------------------------------------------------------
Caffe installation 
https://github.com/BVLC/caffe/wiki/Ubuntu-16.04-or-15.10-Installation-Guide

https://chunml.github.io/ChunML.github.io/project/Installing-Caffe-Ubuntu/
-----------------------------------------------------------------------------
RGB image processing. 

https://towardsdatascience.com/deep-learning-unbalanced-training-data-solve-it-like-this-6c528e9efea6?source=post_page---------------------------&gi=2c28e8c9a026

-----------------------------------------------------------------------------
copy specific files from a folder https://blog.csdn.net/fqlovetb/article/details/84334459
-----------------------------------------------------------------------------
change ubuntu and pip sources. 
https://blog.csdn.net/qq_30163461/article/details/80401353
------------------------------------------------------------------------------
Hands on TensorFlow . lectures + code 

http://imatge-upc.github.io/telecombcn-2016-dlcv/

-------------------------------------------------------------------------------
create bash file to run a program from anywhere in the system
https://www.taniarascia.com/how-to-create-and-use-bash-scripts/
-------------------------------------------------------------------------------

Learn python programming 

https://automatetheboringstuff.com/
-------------------------------------------------------------------------------

Machine learning 100 days course 

https://github.com/Avik-Jain/100-Days-Of-ML-Code
------------------------------------------------------------------------------
Hundrads of datasets 

https://github.com/awesomedata/awesome-public-datasets
------------------------------------------------------------------------------
cut video using ffmpeg

ffmpeg -ss 5 -i traffic1.mp4 -t 60 -c copy  output2.mp4

where 5 is starting second point and -t 60 is duration of video.   -t can replace with -to to mention the ending point.

convert video to imges

ffmpeg -i MVI_1645_VIS.avi -vf fps=1/5 -qmin 1  -q:v 1  o%d.jpg

convert images to videos 

cat visible/*.jpg | ffmpeg -f image2pipe -i - outputVisible.mp4

---------------------------------------------------------------------------------------
#convert one image extension to another , i.e  .jpg to .png . 
install librarey  

$ sudo apt-get install imagemagick

then run for a batch of files. 

$ for i in *.png ; do convert "$i" "${i%.*}.jpg" ; done
----------------------------------------------------------------------------------------
#delete all files with a certain extenstion from folder and subfolders

cd <dir>
#This will only delete in master folder and leave rest  , -maxdepth 1 means only this folder, 
#you can change this paramter to 2 and so on if you want to delete folder/subfolder/sub sub folder etc. 

$ find . -maxdepth 1 -type f -iname \*.jpg -delete   
 #Note this will delete files from folder and it's sub folder, so first use command without -delete to make sure. 
$ find . -type f -iname \*.jpg -delete   
-----------------------------------------------------------------------------------------

#Count number of files/images in folder and it's subfolders 

$find sequences -type f | wc -l                  #sequences is folder name.

------------------------------------------------------------------------------------------
#copy first n files froma folder 

$ find . -maxdepth 1 -type f -print0 | head -z -n 100 | xargs -0 -r -- cp -t "/media/littro/ded08585-d8e8-4a37-9bd3-209b37b051fe/littro/LittroData/DualBand/visual/Resize/annN/" --

-------------------------------------------------------------------------------------
#Copy or move all files from a folder with a specific string to another folder 
#for example there are  these files in a folder    (1_lwir.jpg,  12_lwir.jpg , 454_lwir.jpg , 1_visible.jpg , 15_visible.jpg, 645_visible.jp).
#we want to move all _lwir images, so command is 

$ mv  images/*_lwir.jpg*     /moved/        #This will move all images contain _lwir.jpg   , no matter what they are start with  
#if we want to move based on first n characters then we use ? mark.
$ mv images/?_lwir.jpg*   /moved/      #it will move just first one character + _lwir.jpg and move them, so in this case it will only move 1_lwir.jpg, we can increase ? mark accordinlgy. 

#if we want to copy or move files that's name contain a specific string for example there are images like  146ADAS211jpg ,  asbADAS2552.jpg , abd.jpg , 02255.jpg 
#and we want to copy images that's name contain string ADAS , then we use 
$ mv images/*ADAS*.jpg  /moved/
#*ADAS*.jpg mean  no matter what is the start and what is at the end , if this name contains ADAS it will move/copy
--------------------------------------------------------------------------------

find chinese fonts in ubuntu 

$ fc-list :lang=zh
----------------------------------------------------------------------------------------

How to get latest file from a folder 

BACKUPDIR=$(ls -td /home/littro/MobileNet-YOLO-master/models/darknet_yolov3/securityVIS/*.solverstate | head -1)
$BACKUPDIR

-----------------------------------------------------------------------------------------
How to split file name , extension and full path using python 

https://stackoverflow.com/questions/7304117/split-filenames-with-python

>>> f = 'C:\\X\\Data\\foo.txt'
>>> import os
>>> os.path.basename(f)
'foo.txt'
>>> os.path.dirname(f)
'C:\\X\\Data'
>>> os.path.splitext(f)
('C:\\X\\Data\\foo', '.txt')
>>> os.path.splitext(os.path.basename(f))
('foo', '.txt')

>>> name , extension = os.path.splitext(os.path.basename(filename))
-----------------------------------------------------------------------------------------
